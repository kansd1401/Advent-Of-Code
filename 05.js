let str = `3,225,1,225,6,6,1100,1,238,225,104,0,1101,72,36,225,1101,87,26,225,2,144,13,224,101,-1872,224,224,4,224,102,8,223,223,1001,224,2,224,1,223,224,223,1102,66,61,225,1102,25,49,224,101,-1225,224,224,4,224,1002,223,8,223,1001,224,5,224,1,223,224,223,1101,35,77,224,101,-112,224,224,4,224,102,8,223,223,1001,224,2,224,1,223,224,223,1002,195,30,224,1001,224,-2550,224,4,224,1002,223,8,223,1001,224,1,224,1,224,223,223,1102,30,44,225,1102,24,21,225,1,170,117,224,101,-46,224,224,4,224,1002,223,8,223,101,5,224,224,1,224,223,223,1102,63,26,225,102,74,114,224,1001,224,-3256,224,4,224,102,8,223,223,1001,224,3,224,1,224,223,223,1101,58,22,225,101,13,17,224,101,-100,224,224,4,224,1002,223,8,223,101,6,224,224,1,224,223,223,1101,85,18,225,1001,44,7,224,101,-68,224,224,4,224,102,8,223,223,1001,224,5,224,1,223,224,223,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,7,677,226,224,102,2,223,223,1005,224,329,101,1,223,223,8,677,226,224,1002,223,2,223,1005,224,344,1001,223,1,223,1107,677,677,224,102,2,223,223,1005,224,359,1001,223,1,223,1107,226,677,224,102,2,223,223,1005,224,374,101,1,223,223,7,226,677,224,102,2,223,223,1005,224,389,101,1,223,223,8,226,677,224,1002,223,2,223,1005,224,404,101,1,223,223,1008,226,677,224,1002,223,2,223,1005,224,419,1001,223,1,223,107,677,677,224,102,2,223,223,1005,224,434,101,1,223,223,1108,677,226,224,1002,223,2,223,1006,224,449,101,1,223,223,1108,677,677,224,102,2,223,223,1006,224,464,101,1,223,223,1007,677,226,224,102,2,223,223,1006,224,479,101,1,223,223,1008,226,226,224,102,2,223,223,1006,224,494,101,1,223,223,108,226,226,224,1002,223,2,223,1006,224,509,101,1,223,223,107,226,226,224,102,2,223,223,1006,224,524,101,1,223,223,1107,677,226,224,102,2,223,223,1005,224,539,1001,223,1,223,108,226,677,224,1002,223,2,223,1005,224,554,101,1,223,223,1007,226,226,224,102,2,223,223,1005,224,569,101,1,223,223,8,226,226,224,102,2,223,223,1006,224,584,101,1,223,223,1008,677,677,224,1002,223,2,223,1005,224,599,1001,223,1,223,107,226,677,224,1002,223,2,223,1005,224,614,1001,223,1,223,1108,226,677,224,102,2,223,223,1006,224,629,101,1,223,223,7,677,677,224,1002,223,2,223,1005,224,644,1001,223,1,223,108,677,677,224,102,2,223,223,1005,224,659,101,1,223,223,1007,677,677,224,102,2,223,223,1006,224,674,101,1,223,223,4,223,99,226`

let temp = `3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,
1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,
999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99`

let temp1 = `3,12,6,12,15,1,13,14,13,4,13,99,-1,0,1,9`

let dataArr = str.split(",")
for(let x in dataArr){
  dataArr[x] = Number(dataArr[x])
}

const opCoder = (data,value) => {
  let arr = [...data]
  let x=0
  while(x < arr.length){
    console.log(`/////////////////////////////////////////////////////////////////////////////
    intsruction:${arr[x]} at ${x} length of array:${arr.length}`)
    console.log(`                                        pos for data for 4:${arr[x+3]}`)
    console.log(`                                                pos for data for 3,4,5,6:${arr[x+1]}`)
    let instruction = arr[x].toString().split("").reverse()
    console.log(instruction)
    let op, firstParam, secondParam;
    if(Number(instruction[0]) === 9 && Number(instruction[1]) === 9){
      op = 99
    }else{
      op = Number(instruction[0])
    }
    if(Number(instruction[2])){
        firstParam = arr[x+1]
    }else{
        firstParam = arr[arr[x+1]]
    }

    if(Number(instruction[3])){
      secondParam = arr[x+2]
    }else{
      secondParam = arr[arr[x+2]]
    } 
    console.log(`this is OP: ${op}  p1:${arr[x+1]}   p2:${arr[x+2]}
    this is firstParam: ${firstParam}
    this is secondParam: ${secondParam}`)

    if(op===99){
      return arr[0]
    }else if(op===1){
      arr[arr[x+3]] = firstParam + secondParam
      x+=4
    }else if(op===2){
      arr[arr[x+3]] = firstParam * secondParam
      x+=4
    }else if(op===3){
      arr[arr[x+1]] = value
      x+=2
    }else if(op===4){
      console.log("                                    This is the reult for test:"+firstParam)
      return
      x+=2
    // }else if(op === 5){
    //   console.log(`Called op ${op}`)
    //   if(Number(arr[x+1])){
    //     x=secondParam
    //   }else{
    //     x+=4
    //   }
    // }else if(op === 6){
    //   console.log(`Called op ${op}`)
    //   if(!Number(arr[x+1])){
    //     x=secondParam
    //   }else{
    //     x+=4
    //   }
    // }else if(op === 7){
    //   console.log(`Called op ${op}`)
    //   if(firstParam < secondParam){
    //     arr[arr[x+3]] = 1
    //     x+=4
    //   }else{
    //     arr[arr[x+3]] = 0
    //     x+=4
    //   }
    // }else if(op === 8){
    //   console.log(`Called op ${op}`)
    //   if(firstParam === secondParam){
    //     arr[arr[x+3]] = 1
    //     x+=4
    //   }else{
    //     arr[arr[x+3]] = 0
    //     x+=4
    //   }
    }else{
      // arr.forEach((x,i) => console.log(`${i} ------- ${x}`))
      return
    }
  }
  return arr[0]
}

const decoder = (value,arr) => {
  for(let i = 0; i < 100; i++){
    arr[1] = i
    for(let j = 0; j < 100; j++){
      arr[2] = j
      if(opCoder(arr) === value){
        // console.log(`boi 1 :${i} boi 2:${j}`)
      }
    }
  }
}

console.log(opCoder(dataArr,1))
